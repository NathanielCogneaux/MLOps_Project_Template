services:
  ai_server:  # Service name
    user: "1000:0" # allowed user to access and read the shared volume
    build:
      context: .  # Use the contents of the current directory
      args:
        - API_UID=${API_UID:-1000}
        - API_GID=${API_GID:-1000}      
      dockerfile: Dockerfile  # Use the Dockerfile in the current directory
    container_name: ai_server
    ports:
      - "${API_PORT:-8005}:${API_PORT:-8005}"
    environment:
      - DATA_PATH=/shared-data
      - API_PORT=${API_PORT:-8005}
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1  # Real-time output of stdout/stderr (disable buffering)
    env_file:
      - .env
    restart: unless-stopped  # Restart the container unless stopped by the user
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8005/docs')"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["python", "-m", "api.main"]
    volumes:
      - ./smart_pricing/v1/modules/data:/app/smart_pricing/v1/modules/data
      - ./smart_pricing/v1/saved_data:/app/smart_pricing/v1/saved_data
      - ./smart_pricing/v1/output_data:/app/smart_pricing/v1/output_data

      - ./crawl_notif/data:/app/crawl_notif_api/data
      
      - airflow_shared-data:/shared-data

volumes:
  airflow_shared-data:
    external: true # managed outside this compose file